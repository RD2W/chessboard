name: CI - Tests and Build

on:
  push:
    branches: [ dev, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
          cache: true

      - name: Run unit tests
        run: |
          go test -v -race ./...
          go test -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html
          retention-days: 30

  build:
    name: Build Binary
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
          cache: true

      - name: Build binary
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o chessboard-${{ matrix.os }}-${{ matrix.arch }} ./cmd/main.go

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: chessboard-${{ matrix.os }}-${{ matrix.arch }}-${{ github.run_id }}
          path: chessboard-${{ matrix.os }}-${{ matrix.arch }}
          retention-days: 7

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.5.0

      - name: Run golangci-lint
        run: |
          golangci-lint run --timeout=5m
